# ==============================================================================
# my .Rprofile configuration (symlinked to ~/.Rprofile)
# ==============================================================================

# avoid package library issues with R version changes
if (as.character(Sys.info()["effective_user"]) %in%
  c("nimahejazi", "nhejazi", "nsh")) {
    if (dir.exists("~/.Rlibrary")) {
      try(.libPaths("~/.Rlibrary"))
    }
}

# Give REPL prompts that are clearer
options(prompt = "R > ", continue = "... ")

# Stop asking for CRAN mirror every time
options("repos" = c(CRAN = "https://cran.rstudio.com/"))

# Create a new invisible environment for all the functions to go in.
.env <- new.env()

# Returns a logical vector TRUE for elements of X not in Y
.env$"%ni%" <- function(x, y) { !(x %in% y) }

# List all functions in a package (also from @_inundata)
.env$lsp <- function(package, all.names = FALSE, pattern) {
    package <- deparse(substitute(package))
    ls(
        pos = paste("package", package, sep = ":"),
        all.names = all.names,
        pattern = pattern
    )
}

# Open to the current directory on Mac or Linux
.env$o <- function(...) {
  if (Sys.info()[1] == "Darwin") {
    system("open .")
  } else if (Sys.info()[1] == "Linux") {
    system("xdg-open .")
  }
}

# Attach all the variables above
attach(.env)

# Avoid this awful default issue permanently
options(stringsAsFactors = FALSE)

# Set a longer print history than normal
options(max.print = 100)

# Follow convention for 80 columns
options(width = 80)

# No stars. Stars are bad for statistics.
options(show.signif.stars = FALSE)

# Tab-complete package names when calling `library()` and `require()`
utils::rc.settings(ipck = TRUE)

# Mask dplyr's data manipulation funs with faster tools from collapse
# see https://cran.r-project.org/package=collapse
options(collapse_mask = "manip")

# Run at R startup (includes pasting timestamp to .Rhistory file)
.First <- function() {
  if (interactive()) {
    utils::timestamp(, prefix = paste("##------ [", getwd(), "] ", sep = ""))
    cat("\nSuccessfully loaded .Rprofile at", base::date(), "\n")
  }
}

# Run before R closes (includes saving interactive console history)
.Last <- function() {
  if (interactive() && commandArgs()[1] != "radian") {
    hist_file <- Sys.getenv("R_HISTFILE")
    if(hist_file == "") hist_file <- "~/.RHistory"
    savehistory(hist_file)
    cat("\nGoodbye at ", base::date(), "\n")
  }
}

# Load select packages when not using RStudio
if (interactive() && Sys.getenv("RSTUDIO") != 1) {
  # load useful packages if installed
  pkg_list <- c("usethis", "remotes", "devtools", "testthat", "fcuk", "nima")
  for (pkg in pkg_list) {
    if (pkg %in% utils::installed.packages()[, 1]) {
      library(pkg, character.only = TRUE)
    }
  }
  rm(pkg, pkg_list)

  # load package colorout at startup if terminal colors supported
  if ("colorout" %in% utils::installed.packages()[, 1]) {
    if ("256color" %in% unlist(strsplit(Sys.getenv("TERM"), "-"))) {
      library("colorout")
    }
  }
}

if (interactive()) {
  # enter the fastverse and the tidyverse
  pkg_list <- c("fastverse", "tidyverse")
  for (pkg in pkg_list) {
    if (pkg %in% utils::installed.packages()[, 1]) {
      library(pkg, character.only = TRUE)
    }
  }
  rm(pkg, pkg_list)
}
